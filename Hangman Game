/* *author: Jai Keshav Sharma
   *description: this is the code for Hangman game in which user has to guess the word with limited chances
   *28/01/2024
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
int main()
{
    srand(time(NULL));
    char guessWords[][16] = {
        "green",
        "yellow",
        "purple",
        "windows",
        "linux",
        "apple"};

    int randomIndex = rand() % 6;

    int numLives = 5;
    int numCorrect = 0;
    int oldCorrect = 0;

    int lengthOfWord = strlen(guessWords[randomIndex]);

    // printf("%s %d %d\n", guessWords[randomIndex], lengthOfWord, randomIndex);

    int letterGuessed[8] = {0, 0, 0, 0, 0, 0, 0, 0};

    char guess[16];

    int quit = 0;
    char letterEntered;

    // Game_Loop

    while (numCorrect < lengthOfWord)
    {
        printf("\n\nNew Turn....\nHangman word:");

        for (int i = 0; i < lengthOfWord; i++)
        {
            if (letterGuessed[i] == 1)
            {
                printf("%c", guessWords[randomIndex][i]);
            }
            else
            {
                printf("-");
            }
        }
        printf("\n");

        printf("letter correct so far %d\n", numCorrect);

        printf("Enter a guess letter: \n");
        fgets(guess, 16, stdin);

        letterEntered = guess[0];
        printf("letterentered: %c\n", letterEntered);

        if (strncmp(guess, "quit", 4) == 0)
        {
            quit = 1;
            break;
        }

        oldCorrect = numCorrect;

        for (int i = 0; i < lengthOfWord; i++)
        {
            if (letterGuessed[i] == 1) // this is bcz the while loop will be running until the length of the word is reached no matter u entered the whole word or the single letter as long as the length of the word.
            {                          // for example take the word "purple" -> if the user enters the whole word then he will definitely win
                continue;              // but if he enters a letter which is present in the guesswords array as many times as the length of the purple, then also he can win. To avoid that situation, this step is mandatory.
            }
            if (letterEntered == guessWords[randomIndex][i])
            {
                letterGuessed[i] = 1;
                numCorrect++;
            }
        }

        if (oldCorrect == numCorrect)
        {
            numLives--;
            printf("Sorry, wrong guess :(\n");
            if (numLives == 0)
            {
                break;
            }
        }

        else
        {
            printf("Correct guess :)\n");
        }

    } // While Loop

    if (quit == 1)
    {
        printf("\nThe user quit early!\n");
    }
    else if (numLives == 0)
    {
        printf("\nSorry you LOSE :(, the word was: %s\n", guessWords[randomIndex]);
    }
    else
    {
        printf("\nYOU WIN !!! :)\n");
    }

    return 0;
}
